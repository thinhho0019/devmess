services:
  postgres:
    image: postgres:15
    container_name: postgres-db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  redis:
    image: redis:7.2-alpine
    container_name: redis-server
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis_data:/data
    networks:
      - app-network

  backend:
    build:
      context: ./server
      dockerfile: Dockerfile    
    container_name: backend
    env_file:
      - ./server/.env
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
    networks:
      - app-network

  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile   
    container_name: frontend
    env_file:
      - ./client/.env
    ports:
      - "5173:80"
    volumes:
      - /var/www/devmess/frontend_dist:/app_dist
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    depends_on:
      - frontend
      - backend
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - /var/www/devmess/frontend_dist:/usr/share/nginx/html
    networks:
      - app-network

volumes:
  postgres_data:
  redis_data:

networks:
  app-network:
    driver: bridge
